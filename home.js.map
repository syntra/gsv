{"version":3,"sources":["webpack:///./docs/home.md"],"names":["_path","_interopRequireDefault","__webpack_require__","_react","_interopRequireWildcard","Link","props","to","rest","_objectWithoutProperties","includes","default","createElement","_extends","href","path","join","onClick","e","preventDefault","location","URL","window","origin","history","pushState","Location","pathname","hash","query","getLocation","popStateEvent","CustomEvent","detail","dispatchEvent","defaultProps","lazyComponent","provider","_class","_temp","React","Component","[object Object]","args","super","_defineProperty","this","Comp","componentDidMount","state","shouldLoad","then","c","setState","render","children","bind","_jsx","className","_ref3","id","currentPage","aria-hidden","_ref4","_ref5"],"mappings":"2JAEM,MAAAA,EAAAC,EAAAC,EAAA,IACAC,ySAAAC,CAAAF,EAAA,IACAD,EAAAC,EAAA,IAgGFD,EAAAC,EAAA,iqCA3FF,MAOMG,EAAOC,IACX,IAAIC,GAACA,GAAeD,EAARE,EAAZC,EAAoBH,GAApB,OAEA,OAAIC,EAAGG,SAAS,QACPP,EAAAQ,QAAAC,cAAA,IAAAC,KAAOP,GAAOQ,KAAMP,MAGf,MAAVA,EAAG,KACLA,EAAKQ,UAAKC,KAAK,IAAI,aAAeT,GAIlCJ,EAAAQ,QAAAC,cAAA,IAAAC,KACML,GACJM,KAAMP,EACNU,QAASC,IAGP,GAFAA,EAAEC,iBAEe,MAAbb,EAAMC,GACR,OAAO,EAGT,MAAMa,EAAW,IAAIC,IAAIN,UAAKC,KAAKM,OAAOF,SAASG,OAAQhB,IAE3De,OAAOE,QAAQC,UA/BHC,MAClBZ,KAAMY,EAASZ,KACfa,SAAUD,EAASC,SACnBC,KAAMF,EAASE,KACfC,MAAOH,EAASG,QA2BeC,CAAYV,GAAW,KAAMb,GACtDD,EAAMW,UAEN,MAAMc,EAAgB,IAAIC,YAAY,kBAAoBC,OAAQb,IAGlE,OAFAc,cAAcH,IAEP,QAMf1B,EAAK8B,cACHrB,KAAM,GACNG,QAAS,QA6FX,MAAMmB,EAAgBC,IAAQ,IAAAC,EAAAC,EAAA,OAAAA,EAAAD,gBACdE,UAAMC,UAAUC,eAAAC,GAAAC,SAAAD,GAAAE,EAAAC,KAAA,SAM1BC,KAAM,OAGRC,qBACOF,KAAKG,MAAMF,MAAQD,KAAKxC,MAAM4C,YACjCb,IAAWc,KAAKC,IACdN,KAAKO,UACHN,KAAMK,EAAEzC,YAMhB2C,SACE,MAAMP,KAAEA,GAASD,KAAKG,MACtB,OAAOF,EAAOP,UAAM5B,cAAcmC,EAAMD,KAAKxC,MAAOwC,KAAKxC,MAAMiD,UAAY,MAAQ,OAtB3DV,EAAAP,EAAA,gBAGxBY,YAAY,IAHYX,GA2BbH,EAAc,IAAMlC,EAAAgB,EAAA,IAAAiC,KAAAjD,EAAAsD,KAAA,WACdpB,EAAc,IAAMlC,EAAAgB,EAAA,IAAAiC,KAAAjD,EAAAsD,KAAA,iBAOvCC,EAAA,MAAIC,UAAU,cAAd,WAUmaD,EAAA,KAAGC,UAAU,0BAAb,uOAMnaD,EAAA,MAAIC,UAAU,6CAAd,kEApBepD,GACfmD,EAAA,gBACEA,EAAA,OAAKC,UAAU,iBAAf,EAA0BD,EAAA,WAASC,UAAU,4DAAnB,EACxBD,EAAA,OAAKC,UAAU,kBAAf,EAAAC,EAEVF,EAAA,MAAIG,GAAG,GAAGF,UAAU,iBAApB,MAAgCD,EAACpD,GAAKwD,YAAoCvD,EAAOuD,YAAaH,UAAU,4BAA4BnD,GAAG,IAAIuD,cAAY,UACvJL,EAAA,MAAIG,GAAG,sDAAP,mDAAqGH,EAACpD,GAAKwD,YAAoCvD,EAAOuD,YAAaH,UAAU,4BAA4BnD,GAAG,iDAAiDuD,cAAY,YAIrQL,EAAA,OAAKC,UAAU,aAAf,EACED,EAAA,OAAKC,UAAU,kBAAf,EACED,EAAA,OAAKC,UAAU,gBAAf,EACED,EAAA,OAAKC,UAAU,2EAAf,EACAD,EAAA,MAAIC,UAAU,6CAA6CE,GAAG,iFAA9D,+EAAmNH,EAACpD,GAAKwD,YAAoCvD,EAAOuD,YAAaH,UAAU,4BAA4BnD,GAAG,4EAA4EuD,cAAY,UADlZC,MAKRN,EAAA,WAASC,UAAU,gDAAnB,EACQD,EAAA,OAAKC,UAAU,kBAAf,EAAAM,EAGAP,EAAA,UAAQC,UAAU,iEAAlB,EACJD,EAAA,cAAGA,EAACpD,GAAKwD,YAAoCvD,EAAOuD,YAAatD,GAAG,mCAAjE","file":"home.js","sourcesContent":["\n      \n      import path from 'path';\n      import React, { Component } from 'react';\n      import makeClass from 'classnames';\n\n      \n  import PropTypes from 'prop-types';\n\n  const getLocation = Location => ({\n    href: Location.href,\n    pathname: Location.pathname,\n    hash: Location.hash,\n    query: Location.query\n  });\n\n  const Link = props => {\n    let {to, ...rest} = props;\n\n    if (to.includes('http')) {\n      return <a {...props} href={to} />\n    }\n\n    if (to[0] === '#') {\n      to = path.join('/','home.html') + to;\n    }\n\n    return (\n      <a\n        {...rest}\n        href={to}\n        onClick={e => {\n          e.preventDefault();\n\n          if (props.to === '#') {\n            return false;\n          }\n\n          const location = new URL(path.join(window.location.origin, to))\n\n          window.history.pushState(getLocation(location), null, to);\n          props.onClick();\n\n          const popStateEvent = new CustomEvent('changeLocation', { detail: location });\n          dispatchEvent(popStateEvent);\n\n          return false;\n        }}\n      />\n    );\n  };\n\n  Link.defaultProps = {\n    href: '',\n    onClick: () => {}\n  };\n\n  Link.propTypes = {\n    href: PropTypes.string,\n    onClick: PropTypes.func\n  }\n\n      \n  const PluginProvider = ({plugins, name, options, children, ...props}) => {\n    let Plugin = plugins[name];\n    const pluginOptions = Plugin.options;\n\n    if (!Plugin) {\n      return <div />;\n    }\n\n    Plugin = Plugin.component;\n    return (\n      <Plugin\n        {...pluginOptions} \n        options={options ? options.options : {}}\n        {...(options ? options.props : props)}\n        children={children}\n        plugins={plugins}\n      />\n    );\n  };\n\n      \n  class Details extends Component {\n    state = {\n      open: this.props.open\n    }\n\n    render() {\n      return (\n        <details open={this.state.open}>\n          {this.props.children}\n        </details>\n      )\n    }\n  };\n\n      \n      \n    import IdealImage from 'react-ideal-image';\n\n    const imageSources = {  };\n\n    class LazyImageComponent extends React.Component {\n      state = {\n        image: null,\n        ImageProvider: imageSources[this.props.src]\n      }\n\n      componentDidMount() {\n        if (!this.state.image) {\n          this.state.ImageProvider().then(c => {\n            this.setState({\n              image: c.default\n            });\n          });\n        }\n      }\n\n      render() {\n        let { image } = this.state;\n\n        return image && typeof image === 'object' ? (\n          <IdealImage\n            {...this.props}\n            className={makeClass('image', this.props.className)}\n            src={image.src.src}\n            width={image.src.width || image.width}\n            height={image.src.height || image.height}\n            placeholder={{ lqip: image.preSrc }}\n            srcSet={image.src.images\n              ? image.src.images.map(i => ({\n                  ...i,\n                  src: i.path\n                }))\n              : [{\n                  src: image.src,\n                  width: image.width\n                }]\n            }\n          />\n        ) : <img className={makeClass('image', this.props.className)} src={image} />;\n      }\n    }\n  \n      \n  const lazyComponent = provider =>\n    class extends React.Component {\n      static defaultProps = {\n        shouldLoad: true\n      };\n  \n      state = {\n        Comp: null\n      };\n  \n      componentDidMount() {\n        if (!this.state.Comp && this.props.shouldLoad) {\n          provider().then(c => {\n            this.setState({\n              Comp: c.default\n            });\n          });\n        }\n      }\n  \n      render() {\n        const { Comp } = this.state;\n        return Comp ? React.createElement(Comp, this.props, this.props.children || null) : null;\n      }\n    };\n\n\n      const Gist = lazyComponent(() => import(/* webpackChunkName: \"plugin-embed\" */ 'react-gist'))\n      const TweetEmbed = lazyComponent(() => import(/* webpackChunkName: \"plugin-embed\" */ 'react-tweet-embed'))\n    \n      \n    const homePage = props => (\n      <div>\n        <div className=\"homePage\"><section className=\"hero is-primary is-bold is-medium has-text-centered\">\n          <div className=\"hero-body\">\n      <h1 className=\"title\">GSV</h1>\n<h2 id=\"\" className=\"subtitle\"> <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#\" aria-hidden=\"true\"/></h2>\n<h2 id=\"powerful-cli-tools-for-managing-gatsby-blogs.\">Powerful CLI tools for managing Gatsby blogs. <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#powerful-cli-tools-for-managing-gatsby-blogs.\" aria-hidden=\"true\"/></h2>\n\n        </div>\n      </section>\n    <div className=\"hero\">\n      <div className=\"hero-body\">\n        <div className=\"columns\">\n          <div className=\"home column content is-two-thirds-tablet is-three-quarters-desktop\">\n          <h2 className=\"no-link has-text-primary has-text-centered\" id=\"create-a-blog-in-seconds.-add-pages-and-posts-all-from-the-command-line.\">Create a blog in seconds. Add pages and posts all from the command-line.  <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#create-a-blog-in-seconds.-add-pages-and-posts-all-from-the-command-line.\" aria-hidden=\"true\"/></h2><p className=\"has-text-centered\">At its core, gsv is a cms for your cli. It gives you the power to spin up gatsby blogs quickly and equips you with the tools to manage that blog entirely from the cli. No more fiddling with gatsby configurations or plugins!</p></div>\n        </div>\n      </div>\n    </div>\n  <section className=\"hero is-link is-small has-text-centered\">\n          <div className=\"hero-body\">\n      <h1 className=\"no-link title is-4 has-text-centered\">Even this pages is markdown. What are you waiting for?</h1>\n\n          <button className=\"button  is-large is-link is-bold is-inverted is-outlined\">\n      <p><Link currentPage={(this && this.props || props).currentPage} to=\"/pages/GettingStarted.html\">Get Started &#x1F389;</Link></p>\n\n      </button>\n    \n        </div>\n      </section></div>\n      </div>\n    );\n\n    export default homePage;\n  \n    "],"sourceRoot":""}